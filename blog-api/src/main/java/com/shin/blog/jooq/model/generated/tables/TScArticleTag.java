/*
 * This file is generated by jOOQ.
 */
package com.shin.blog.jooq.model.generated.tables;


import com.shin.blog.jooq.model.generated.Indexes;
import com.shin.blog.jooq.model.generated.Keys;
import com.shin.blog.jooq.model.generated.Shinblog;
import com.shin.blog.jooq.model.generated.tables.records.ScArticleTagRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TScArticleTag extends TableImpl<ScArticleTagRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>shinblog.sc_article_tag</code>
     */
    public static final TScArticleTag SC_ARTICLE_TAG = new TScArticleTag();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ScArticleTagRecord> getRecordType() {
        return ScArticleTagRecord.class;
    }

    /**
     * The column <code>shinblog.sc_article_tag.id</code>.
     */
    public final TableField<ScArticleTagRecord, Long> ID = createField(DSL.name("id"), SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>shinblog.sc_article_tag.article_id</code>.
     */
    public final TableField<ScArticleTagRecord, Long> ARTICLE_ID = createField(DSL.name("article_id"), SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>shinblog.sc_article_tag.tag_id</code>.
     */
    public final TableField<ScArticleTagRecord, Long> TAG_ID = createField(DSL.name("tag_id"), SQLDataType.BIGINT.nullable(false), this, "");

    private TScArticleTag(Name alias, Table<ScArticleTagRecord> aliased) {
        this(alias, aliased, null);
    }

    private TScArticleTag(Name alias, Table<ScArticleTagRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>shinblog.sc_article_tag</code> table reference
     */
    public TScArticleTag(String alias) {
        this(DSL.name(alias), SC_ARTICLE_TAG);
    }

    /**
     * Create an aliased <code>shinblog.sc_article_tag</code> table reference
     */
    public TScArticleTag(Name alias) {
        this(alias, SC_ARTICLE_TAG);
    }

    /**
     * Create a <code>shinblog.sc_article_tag</code> table reference
     */
    public TScArticleTag() {
        this(DSL.name("sc_article_tag"), null);
    }

    public <O extends Record> TScArticleTag(Table<O> child, ForeignKey<O, ScArticleTagRecord> key) {
        super(child, key, SC_ARTICLE_TAG);
    }

    @Override
    public Schema getSchema() {
        return Shinblog.SHINBLOG;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SC_ARTICLE_TAG_ARTICLE_ID, Indexes.SC_ARTICLE_TAG_TAG_ID);
    }

    @Override
    public Identity<ScArticleTagRecord, Long> getIdentity() {
        return (Identity<ScArticleTagRecord, Long>) super.getIdentity();
    }

    @Override
    public UniqueKey<ScArticleTagRecord> getPrimaryKey() {
        return Keys.KEY_SC_ARTICLE_TAG_PRIMARY;
    }

    @Override
    public List<UniqueKey<ScArticleTagRecord>> getKeys() {
        return Arrays.<UniqueKey<ScArticleTagRecord>>asList(Keys.KEY_SC_ARTICLE_TAG_PRIMARY);
    }

    @Override
    public TScArticleTag as(String alias) {
        return new TScArticleTag(DSL.name(alias), this);
    }

    @Override
    public TScArticleTag as(Name alias) {
        return new TScArticleTag(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TScArticleTag rename(String name) {
        return new TScArticleTag(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TScArticleTag rename(Name name) {
        return new TScArticleTag(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Long, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
