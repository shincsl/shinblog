/*
 * This file is generated by jOOQ.
 */
package com.shin.blog.jooq.model.generated.tables.records;


import com.shin.blog.jooq.model.generated.tables.TScArticleBody;
import com.shin.blog.jooq.model.generated.tables.interfaces.IScArticleBody;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ScArticleBodyRecord extends UpdatableRecordImpl<ScArticleBodyRecord> implements Record4<String, String, String, String>, IScArticleBody {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>shinblog.sc_article_body.id</code>.
     */
    @Override
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>shinblog.sc_article_body.id</code>.
     */
    @Override
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>shinblog.sc_article_body.content</code>.
     */
    @Override
    public void setContent(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>shinblog.sc_article_body.content</code>.
     */
    @Override
    public String getContent() {
        return (String) get(1);
    }

    /**
     * Setter for <code>shinblog.sc_article_body.content_html</code>.
     */
    @Override
    public void setContentHtml(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>shinblog.sc_article_body.content_html</code>.
     */
    @Override
    public String getContentHtml() {
        return (String) get(2);
    }

    /**
     * Setter for <code>shinblog.sc_article_body.article_id</code>.
     */
    @Override
    public void setArticleId(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>shinblog.sc_article_body.article_id</code>.
     */
    @Override
    public String getArticleId() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return TScArticleBody.SC_ARTICLE_BODY.ID;
    }

    @Override
    public Field<String> field2() {
        return TScArticleBody.SC_ARTICLE_BODY.CONTENT;
    }

    @Override
    public Field<String> field3() {
        return TScArticleBody.SC_ARTICLE_BODY.CONTENT_HTML;
    }

    @Override
    public Field<String> field4() {
        return TScArticleBody.SC_ARTICLE_BODY.ARTICLE_ID;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getContent();
    }

    @Override
    public String component3() {
        return getContentHtml();
    }

    @Override
    public String component4() {
        return getArticleId();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getContent();
    }

    @Override
    public String value3() {
        return getContentHtml();
    }

    @Override
    public String value4() {
        return getArticleId();
    }

    @Override
    public ScArticleBodyRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public ScArticleBodyRecord value2(String value) {
        setContent(value);
        return this;
    }

    @Override
    public ScArticleBodyRecord value3(String value) {
        setContentHtml(value);
        return this;
    }

    @Override
    public ScArticleBodyRecord value4(String value) {
        setArticleId(value);
        return this;
    }

    @Override
    public ScArticleBodyRecord values(String value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IScArticleBody from) {
        setId(from.getId());
        setContent(from.getContent());
        setContentHtml(from.getContentHtml());
        setArticleId(from.getArticleId());
    }

    @Override
    public <E extends IScArticleBody> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ScArticleBodyRecord
     */
    public ScArticleBodyRecord() {
        super(TScArticleBody.SC_ARTICLE_BODY);
    }

    /**
     * Create a detached, initialised ScArticleBodyRecord
     */
    public ScArticleBodyRecord(String id, String content, String contentHtml, String articleId) {
        super(TScArticleBody.SC_ARTICLE_BODY);

        setId(id);
        setContent(content);
        setContentHtml(contentHtml);
        setArticleId(articleId);
    }
}
