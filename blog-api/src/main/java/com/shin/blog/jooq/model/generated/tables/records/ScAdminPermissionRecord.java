/*
 * This file is generated by jOOQ.
 */
package com.shin.blog.jooq.model.generated.tables.records;


import com.shin.blog.jooq.model.generated.tables.TScAdminPermission;
import com.shin.blog.jooq.model.generated.tables.interfaces.IScAdminPermission;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ScAdminPermissionRecord extends UpdatableRecordImpl<ScAdminPermissionRecord> implements Record3<Long, Long, Long>, IScAdminPermission {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>shinblog.sc_admin_permission.id</code>.
     */
    @Override
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>shinblog.sc_admin_permission.id</code>.
     */
    @Override
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>shinblog.sc_admin_permission.admin_id</code>.
     */
    @Override
    public void setAdminId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>shinblog.sc_admin_permission.admin_id</code>.
     */
    @Override
    public Long getAdminId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>shinblog.sc_admin_permission.permission_id</code>.
     */
    @Override
    public void setPermissionId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>shinblog.sc_admin_permission.permission_id</code>.
     */
    @Override
    public Long getPermissionId() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Long, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, Long, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return TScAdminPermission.SC_ADMIN_PERMISSION.ID;
    }

    @Override
    public Field<Long> field2() {
        return TScAdminPermission.SC_ADMIN_PERMISSION.ADMIN_ID;
    }

    @Override
    public Field<Long> field3() {
        return TScAdminPermission.SC_ADMIN_PERMISSION.PERMISSION_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getAdminId();
    }

    @Override
    public Long component3() {
        return getPermissionId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getAdminId();
    }

    @Override
    public Long value3() {
        return getPermissionId();
    }

    @Override
    public ScAdminPermissionRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public ScAdminPermissionRecord value2(Long value) {
        setAdminId(value);
        return this;
    }

    @Override
    public ScAdminPermissionRecord value3(Long value) {
        setPermissionId(value);
        return this;
    }

    @Override
    public ScAdminPermissionRecord values(Long value1, Long value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IScAdminPermission from) {
        setId(from.getId());
        setAdminId(from.getAdminId());
        setPermissionId(from.getPermissionId());
    }

    @Override
    public <E extends IScAdminPermission> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ScAdminPermissionRecord
     */
    public ScAdminPermissionRecord() {
        super(TScAdminPermission.SC_ADMIN_PERMISSION);
    }

    /**
     * Create a detached, initialised ScAdminPermissionRecord
     */
    public ScAdminPermissionRecord(Long id, Long adminId, Long permissionId) {
        super(TScAdminPermission.SC_ADMIN_PERMISSION);

        setId(id);
        setAdminId(adminId);
        setPermissionId(permissionId);
    }
}
