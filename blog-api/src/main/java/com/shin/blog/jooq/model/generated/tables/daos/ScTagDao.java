/*
 * This file is generated by jOOQ.
 */
package com.shin.blog.jooq.model.generated.tables.daos;


import com.shin.blog.jooq.learn.extend.ExtendDAOImpl;
import com.shin.blog.jooq.model.entity.ScTag;
import com.shin.blog.jooq.model.generated.tables.TScTag;
import com.shin.blog.jooq.model.generated.tables.records.ScTagRecord;

import java.util.List;

import org.jooq.Configuration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class ScTagDao extends ExtendDAOImpl<ScTagRecord, ScTag, String> {

    /**
     * Create a new ScTagDao without any configuration
     */
    public ScTagDao() {
        super(TScTag.SC_TAG, ScTag.class);
    }

    /**
     * Create a new ScTagDao with an attached configuration
     */
    @Autowired
    public ScTagDao(Configuration configuration) {
        super(TScTag.SC_TAG, ScTag.class, configuration);
    }

    @Override
    public String getId(ScTag object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ScTag> fetchRangeOfId(String lowerInclusive, String upperInclusive) {
        return fetchRange(TScTag.SC_TAG.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<ScTag> fetchById(String... values) {
        return fetch(TScTag.SC_TAG.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public ScTag fetchOneById(String value) {
        return fetchOne(TScTag.SC_TAG.ID, value);
    }

    /**
     * Fetch records that have <code>avatar BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ScTag> fetchRangeOfAvatar(String lowerInclusive, String upperInclusive) {
        return fetchRange(TScTag.SC_TAG.AVATAR, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>avatar IN (values)</code>
     */
    public List<ScTag> fetchByAvatar(String... values) {
        return fetch(TScTag.SC_TAG.AVATAR, values);
    }

    /**
     * Fetch records that have <code>tag_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ScTag> fetchRangeOfTagName(String lowerInclusive, String upperInclusive) {
        return fetchRange(TScTag.SC_TAG.TAG_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tag_name IN (values)</code>
     */
    public List<ScTag> fetchByTagName(String... values) {
        return fetch(TScTag.SC_TAG.TAG_NAME, values);
    }
}
