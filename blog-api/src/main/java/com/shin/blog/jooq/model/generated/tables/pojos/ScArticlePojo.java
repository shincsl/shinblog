/*
 * This file is generated by jOOQ.
 */
package com.shin.blog.jooq.model.generated.tables.pojos;


import com.shin.blog.jooq.model.generated.tables.interfaces.IScArticle;

import java.sql.Timestamp;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ScArticlePojo implements IScArticle {

    private static final long serialVersionUID = 1L;

    private String    id;
    private Integer   deleted;
    private String    status;
    private Integer   commentCounts;
    private Timestamp createTime;
    private Timestamp updateTime;
    private String    summary;
    private String    title;
    private Integer   viewCounts;
    private Integer   weight;
    private Long      authorId;
    private String    bodyId;
    private String    categoryId;

    public ScArticlePojo() {}

    public ScArticlePojo(IScArticle value) {
        this.id = value.getId();
        this.deleted = value.getDeleted();
        this.status = value.getStatus();
        this.commentCounts = value.getCommentCounts();
        this.createTime = value.getCreateTime();
        this.updateTime = value.getUpdateTime();
        this.summary = value.getSummary();
        this.title = value.getTitle();
        this.viewCounts = value.getViewCounts();
        this.weight = value.getWeight();
        this.authorId = value.getAuthorId();
        this.bodyId = value.getBodyId();
        this.categoryId = value.getCategoryId();
    }

    public ScArticlePojo(
        String    id,
        Integer   deleted,
        String    status,
        Integer   commentCounts,
        Timestamp createTime,
        Timestamp updateTime,
        String    summary,
        String    title,
        Integer   viewCounts,
        Integer   weight,
        Long      authorId,
        String    bodyId,
        String    categoryId
    ) {
        this.id = id;
        this.deleted = deleted;
        this.status = status;
        this.commentCounts = commentCounts;
        this.createTime = createTime;
        this.updateTime = updateTime;
        this.summary = summary;
        this.title = title;
        this.viewCounts = viewCounts;
        this.weight = weight;
        this.authorId = authorId;
        this.bodyId = bodyId;
        this.categoryId = categoryId;
    }

    /**
     * Getter for <code>shinblog.sc_article.id</code>.
     */
    @Override
    public String getId() {
        return this.id;
    }

    /**
     * Setter for <code>shinblog.sc_article.id</code>.
     */
    @Override
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for <code>shinblog.sc_article.deleted</code>. 逻辑删除标识,0标识未删除,1标识已删除
     */
    @Override
    public Integer getDeleted() {
        return this.deleted;
    }

    /**
     * Setter for <code>shinblog.sc_article.deleted</code>. 逻辑删除标识,0标识未删除,1标识已删除
     */
    @Override
    public void setDeleted(Integer deleted) {
        this.deleted = deleted;
    }

    /**
     * Getter for <code>shinblog.sc_article.status</code>. 状态00在用01作废
     */
    @Override
    public String getStatus() {
        return this.status;
    }

    /**
     * Setter for <code>shinblog.sc_article.status</code>. 状态00在用01作废
     */
    @Override
    public void setStatus(String status) {
        this.status = status;
    }

    /**
     * Getter for <code>shinblog.sc_article.comment_counts</code>. 评论数量
     */
    @Override
    public Integer getCommentCounts() {
        return this.commentCounts;
    }

    /**
     * Setter for <code>shinblog.sc_article.comment_counts</code>. 评论数量
     */
    @Override
    public void setCommentCounts(Integer commentCounts) {
        this.commentCounts = commentCounts;
    }

    /**
     * Getter for <code>shinblog.sc_article.create_time</code>. 创建时间
     */
    @Override
    public Timestamp getCreateTime() {
        return this.createTime;
    }

    /**
     * Setter for <code>shinblog.sc_article.create_time</code>. 创建时间
     */
    @Override
    public void setCreateTime(Timestamp createTime) {
        this.createTime = createTime;
    }

    /**
     * Getter for <code>shinblog.sc_article.update_time</code>. 更新时间
     */
    @Override
    public Timestamp getUpdateTime() {
        return this.updateTime;
    }

    /**
     * Setter for <code>shinblog.sc_article.update_time</code>. 更新时间
     */
    @Override
    public void setUpdateTime(Timestamp updateTime) {
        this.updateTime = updateTime;
    }

    /**
     * Getter for <code>shinblog.sc_article.summary</code>. 简介
     */
    @Override
    public String getSummary() {
        return this.summary;
    }

    /**
     * Setter for <code>shinblog.sc_article.summary</code>. 简介
     */
    @Override
    public void setSummary(String summary) {
        this.summary = summary;
    }

    /**
     * Getter for <code>shinblog.sc_article.title</code>. 标题
     */
    @Override
    public String getTitle() {
        return this.title;
    }

    /**
     * Setter for <code>shinblog.sc_article.title</code>. 标题
     */
    @Override
    public void setTitle(String title) {
        this.title = title;
    }

    /**
     * Getter for <code>shinblog.sc_article.view_counts</code>. 浏览数量
     */
    @Override
    public Integer getViewCounts() {
        return this.viewCounts;
    }

    /**
     * Setter for <code>shinblog.sc_article.view_counts</code>. 浏览数量
     */
    @Override
    public void setViewCounts(Integer viewCounts) {
        this.viewCounts = viewCounts;
    }

    /**
     * Getter for <code>shinblog.sc_article.weight</code>. 是否置顶
     */
    @Override
    public Integer getWeight() {
        return this.weight;
    }

    /**
     * Setter for <code>shinblog.sc_article.weight</code>. 是否置顶
     */
    @Override
    public void setWeight(Integer weight) {
        this.weight = weight;
    }

    /**
     * Getter for <code>shinblog.sc_article.author_id</code>. 作者id
     */
    @Override
    public Long getAuthorId() {
        return this.authorId;
    }

    /**
     * Setter for <code>shinblog.sc_article.author_id</code>. 作者id
     */
    @Override
    public void setAuthorId(Long authorId) {
        this.authorId = authorId;
    }

    /**
     * Getter for <code>shinblog.sc_article.body_id</code>. 内容id
     */
    @Override
    public String getBodyId() {
        return this.bodyId;
    }

    /**
     * Setter for <code>shinblog.sc_article.body_id</code>. 内容id
     */
    @Override
    public void setBodyId(String bodyId) {
        this.bodyId = bodyId;
    }

    /**
     * Getter for <code>shinblog.sc_article.category_id</code>. 类别id
     */
    @Override
    public String getCategoryId() {
        return this.categoryId;
    }

    /**
     * Setter for <code>shinblog.sc_article.category_id</code>. 类别id
     */
    @Override
    public void setCategoryId(String categoryId) {
        this.categoryId = categoryId;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ScArticlePojo (");

        sb.append(id);
        sb.append(", ").append(deleted);
        sb.append(", ").append(status);
        sb.append(", ").append(commentCounts);
        sb.append(", ").append(createTime);
        sb.append(", ").append(updateTime);
        sb.append(", ").append(summary);
        sb.append(", ").append(title);
        sb.append(", ").append(viewCounts);
        sb.append(", ").append(weight);
        sb.append(", ").append(authorId);
        sb.append(", ").append(bodyId);
        sb.append(", ").append(categoryId);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IScArticle from) {
        setId(from.getId());
        setDeleted(from.getDeleted());
        setStatus(from.getStatus());
        setCommentCounts(from.getCommentCounts());
        setCreateTime(from.getCreateTime());
        setUpdateTime(from.getUpdateTime());
        setSummary(from.getSummary());
        setTitle(from.getTitle());
        setViewCounts(from.getViewCounts());
        setWeight(from.getWeight());
        setAuthorId(from.getAuthorId());
        setBodyId(from.getBodyId());
        setCategoryId(from.getCategoryId());
    }

    @Override
    public <E extends IScArticle> E into(E into) {
        into.from(this);
        return into;
    }
}
