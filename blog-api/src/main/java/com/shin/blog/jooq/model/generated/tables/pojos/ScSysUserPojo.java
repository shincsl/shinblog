/*
 * This file is generated by jOOQ.
 */
package com.shin.blog.jooq.model.generated.tables.pojos;


import com.shin.blog.jooq.model.generated.tables.interfaces.IScSysUser;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ScSysUserPojo implements IScSysUser {

    private static final long serialVersionUID = 1L;

    private Long    id;
    private String  account;
    private Boolean admin;
    private String  avatar;
    private Long    createDate;
    private Boolean deleted;
    private String  email;
    private Long    lastLogin;
    private String  mobilePhoneNumber;
    private String  nickname;
    private String  password;
    private String  salt;
    private String  status;

    public ScSysUserPojo() {}

    public ScSysUserPojo(IScSysUser value) {
        this.id = value.getId();
        this.account = value.getAccount();
        this.admin = value.getAdmin();
        this.avatar = value.getAvatar();
        this.createDate = value.getCreateDate();
        this.deleted = value.getDeleted();
        this.email = value.getEmail();
        this.lastLogin = value.getLastLogin();
        this.mobilePhoneNumber = value.getMobilePhoneNumber();
        this.nickname = value.getNickname();
        this.password = value.getPassword();
        this.salt = value.getSalt();
        this.status = value.getStatus();
    }

    public ScSysUserPojo(
        Long    id,
        String  account,
        Boolean admin,
        String  avatar,
        Long    createDate,
        Boolean deleted,
        String  email,
        Long    lastLogin,
        String  mobilePhoneNumber,
        String  nickname,
        String  password,
        String  salt,
        String  status
    ) {
        this.id = id;
        this.account = account;
        this.admin = admin;
        this.avatar = avatar;
        this.createDate = createDate;
        this.deleted = deleted;
        this.email = email;
        this.lastLogin = lastLogin;
        this.mobilePhoneNumber = mobilePhoneNumber;
        this.nickname = nickname;
        this.password = password;
        this.salt = salt;
        this.status = status;
    }

    /**
     * Getter for <code>shinblog.sc_sys_user.id</code>.
     */
    @Override
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>shinblog.sc_sys_user.id</code>.
     */
    @Override
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>shinblog.sc_sys_user.account</code>. 账号
     */
    @Override
    public String getAccount() {
        return this.account;
    }

    /**
     * Setter for <code>shinblog.sc_sys_user.account</code>. 账号
     */
    @Override
    public void setAccount(String account) {
        this.account = account;
    }

    /**
     * Getter for <code>shinblog.sc_sys_user.admin</code>. 是否管理员
     */
    @Override
    public Boolean getAdmin() {
        return this.admin;
    }

    /**
     * Setter for <code>shinblog.sc_sys_user.admin</code>. 是否管理员
     */
    @Override
    public void setAdmin(Boolean admin) {
        this.admin = admin;
    }

    /**
     * Getter for <code>shinblog.sc_sys_user.avatar</code>. 头像
     */
    @Override
    public String getAvatar() {
        return this.avatar;
    }

    /**
     * Setter for <code>shinblog.sc_sys_user.avatar</code>. 头像
     */
    @Override
    public void setAvatar(String avatar) {
        this.avatar = avatar;
    }

    /**
     * Getter for <code>shinblog.sc_sys_user.create_date</code>. 注册时间
     */
    @Override
    public Long getCreateDate() {
        return this.createDate;
    }

    /**
     * Setter for <code>shinblog.sc_sys_user.create_date</code>. 注册时间
     */
    @Override
    public void setCreateDate(Long createDate) {
        this.createDate = createDate;
    }

    /**
     * Getter for <code>shinblog.sc_sys_user.deleted</code>. 是否删除
     */
    @Override
    public Boolean getDeleted() {
        return this.deleted;
    }

    /**
     * Setter for <code>shinblog.sc_sys_user.deleted</code>. 是否删除
     */
    @Override
    public void setDeleted(Boolean deleted) {
        this.deleted = deleted;
    }

    /**
     * Getter for <code>shinblog.sc_sys_user.email</code>. 邮箱
     */
    @Override
    public String getEmail() {
        return this.email;
    }

    /**
     * Setter for <code>shinblog.sc_sys_user.email</code>. 邮箱
     */
    @Override
    public void setEmail(String email) {
        this.email = email;
    }

    /**
     * Getter for <code>shinblog.sc_sys_user.last_login</code>. 最后登录时间
     */
    @Override
    public Long getLastLogin() {
        return this.lastLogin;
    }

    /**
     * Setter for <code>shinblog.sc_sys_user.last_login</code>. 最后登录时间
     */
    @Override
    public void setLastLogin(Long lastLogin) {
        this.lastLogin = lastLogin;
    }

    /**
     * Getter for <code>shinblog.sc_sys_user.mobile_phone_number</code>. 手机号
     */
    @Override
    public String getMobilePhoneNumber() {
        return this.mobilePhoneNumber;
    }

    /**
     * Setter for <code>shinblog.sc_sys_user.mobile_phone_number</code>. 手机号
     */
    @Override
    public void setMobilePhoneNumber(String mobilePhoneNumber) {
        this.mobilePhoneNumber = mobilePhoneNumber;
    }

    /**
     * Getter for <code>shinblog.sc_sys_user.nickname</code>. 昵称
     */
    @Override
    public String getNickname() {
        return this.nickname;
    }

    /**
     * Setter for <code>shinblog.sc_sys_user.nickname</code>. 昵称
     */
    @Override
    public void setNickname(String nickname) {
        this.nickname = nickname;
    }

    /**
     * Getter for <code>shinblog.sc_sys_user.password</code>. 密码
     */
    @Override
    public String getPassword() {
        return this.password;
    }

    /**
     * Setter for <code>shinblog.sc_sys_user.password</code>. 密码
     */
    @Override
    public void setPassword(String password) {
        this.password = password;
    }

    /**
     * Getter for <code>shinblog.sc_sys_user.salt</code>. 加密盐
     */
    @Override
    public String getSalt() {
        return this.salt;
    }

    /**
     * Setter for <code>shinblog.sc_sys_user.salt</code>. 加密盐
     */
    @Override
    public void setSalt(String salt) {
        this.salt = salt;
    }

    /**
     * Getter for <code>shinblog.sc_sys_user.status</code>. 状态
     */
    @Override
    public String getStatus() {
        return this.status;
    }

    /**
     * Setter for <code>shinblog.sc_sys_user.status</code>. 状态
     */
    @Override
    public void setStatus(String status) {
        this.status = status;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("ScSysUserPojo (");

        sb.append(id);
        sb.append(", ").append(account);
        sb.append(", ").append(admin);
        sb.append(", ").append(avatar);
        sb.append(", ").append(createDate);
        sb.append(", ").append(deleted);
        sb.append(", ").append(email);
        sb.append(", ").append(lastLogin);
        sb.append(", ").append(mobilePhoneNumber);
        sb.append(", ").append(nickname);
        sb.append(", ").append(password);
        sb.append(", ").append(salt);
        sb.append(", ").append(status);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IScSysUser from) {
        setId(from.getId());
        setAccount(from.getAccount());
        setAdmin(from.getAdmin());
        setAvatar(from.getAvatar());
        setCreateDate(from.getCreateDate());
        setDeleted(from.getDeleted());
        setEmail(from.getEmail());
        setLastLogin(from.getLastLogin());
        setMobilePhoneNumber(from.getMobilePhoneNumber());
        setNickname(from.getNickname());
        setPassword(from.getPassword());
        setSalt(from.getSalt());
        setStatus(from.getStatus());
    }

    @Override
    public <E extends IScSysUser> E into(E into) {
        into.from(this);
        return into;
    }
}
